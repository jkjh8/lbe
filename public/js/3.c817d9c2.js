(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{8946:function(e,t,s){"use strict";s.r(t);var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("q-page",{staticClass:"flex flex-center"},[s("q-form",{on:{submit:e.onSubmit,reset:e.onReset}},[s("q-card",{staticStyle:{"min-width":"500px"}},[s("q-card-section",{staticClass:"bg-teal-14"},[s("div",{staticClass:"text-h6 text-white"},[e._v("로그인")])]),s("q-separator"),s("q-card-section",[s("div",{staticClass:"q-mx-md q-mt-md"},[s("div",[s("q-input",{attrs:{outlined:"",label:"E-Mail","lazy-rules":"",rules:e.rules.email},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.onSubmit(t)}},model:{value:e.userInfo.email,callback:function(t){e.$set(e.userInfo,"email",t)},expression:"userInfo.email"}})],1),s("div",{staticClass:"q-mt-md"},[s("q-input",{attrs:{outlined:"",label:"Password","lazy-rules":"",rules:e.rules.password,type:e.show?"text":"password"},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.onSubmit(t)}},scopedSlots:e._u([{key:"append",fn:function(){return[s("q-icon",{attrs:{name:e.show?"mdi-eye":"mdi-eye-off"},on:{click:function(t){e.show=!e.show}}})]},proxy:!0}]),model:{value:e.userInfo.password,callback:function(t){e.$set(e.userInfo,"password",t)},expression:"userInfo.password"}})],1)]),s("div",{staticClass:"fit row justify-between q-ml-sm"},[s("q-checkbox",{attrs:{label:"아이디 저장",color:"teal-14"},on:{input:e.saveIdCheckbox},model:{value:e.idSave,callback:function(t){e.idSave=t},expression:"idSave"}}),s("q-btn",{attrs:{flat:"",color:"orange-10",to:"/register"}},[e._v("회원가입")])],1)]),s("q-separator"),s("q-card-actions",{attrs:{align:"right"}},[s("q-btn",{staticClass:"q-px-sm",attrs:{label:"로그인",type:"submit",color:"teal-14"}}),s("q-btn",{staticClass:"q-px-sm",attrs:{label:"초기화",type:"reset",color:"teal-14",flat:""}})],1)],1)],1)],1)},a=[],i=s("e057"),r={mixins:[i["a"]],data(){return{show:!1,idSave:!1,userInfo:{email:"",password:""},rules:{email:[e=>!!e||"E-main is required",e=>/.+@.+\..+/.test(e)||"Not in E-mail format"],password:[e=>e.length>=8||"At least 8 characters are required"]}}},mounted(){this.checkIdSave()},methods:{onSubmit(){this.login(this.userInfo),this.idSave&&this.setUserId()},onReset(){this.userInfo={email:"",password:""}},saveIdCheckbox(e){e?this.setIdSave():this.clearUserId()}}},n=r,c=s("2877"),l=s("9989"),u=s("0378"),d=s("f09f"),h=s("a370"),p=s("eb85"),m=s("27f9"),f=s("0016"),k=s("8f8e"),v=s("9c40"),I=s("4b7e"),g=s("eebe"),b=s.n(g),y=Object(c["a"])(n,o,a,!1,null,null,null);t["default"]=y.exports;b()(y,"components",{QPage:l["a"],QForm:u["a"],QCard:d["a"],QCardSection:h["a"],QSeparator:p["a"],QInput:m["a"],QIcon:f["a"],QCheckbox:k["a"],QBtn:v["a"],QCardActions:I["a"]})},e057:function(e,t,s){"use strict";t["a"]={data(){return{idSave:!1,header:{},userInfo:{email:"",password:""}}},methods:{login(e){this.$axios.post("/auth/local",e).then((async e=>{await this.updateUserInfoToCookie(e.data),this.getUserInfo(),this.$q.notify({type:"positive",message:"로그인이 성공하였습니다.",position:"center",timeout:1e3}),setTimeout((()=>{this.$router.push("/")}),1500)})).catch((e=>{console.log(e.response.data),this.$q.notify({type:"negative",message:e.response.data.info.message,position:"center",timeout:1e3})}))},updateUserInfoToCookie(e){this.$cookie.set("accessToken",e.accessToken),this.$cookie.set("refreshToken",e.refreshToken),this.$store.commit("user/updateRefreshToken",e.refreshToken)},checkIdSave(){this.idSave="true"===this.$cookie.get("idSave"),this.idSave&&(this.userInfo.email=this.$cookie.get("userId"))},setIdSave(){this.$cookie.set("idSave",this.idSave),this.setUserId()},clearUserId(){this.$cookie.set("idSave",this.idSave),this.$cookie.delete("userId")},setUserId(){this.$cookie.set("userId",this.userInfo.email)},getUserInfo(){const e=this.$cookie.get("accessToken");if(!e)return this.getAccessToken();this.$axios.get("/auth/get",{headers:{Authorization:`Bearer ${e}`}}).then((e=>{this.$store.commit("user/updateUser",e.data.user)})).catch((e=>{console.log(e.response.data)}))},getAccessToken(){console.log("not token")},logout(){this.$axios.get("/auth/logout").then((e=>{console.log(e),this.$cookie.delete("accessToken"),this.$store.commit("user/updateUser",null),this.$router.push("/"),this.$q.notify({type:"positive",message:"로그아웃 완료하였습니다.",position:"center",timeout:1e3})}))}}}}}]);